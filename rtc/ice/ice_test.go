package ice

import (
	"reflect"
	"testing"

	"github.com/pion/stun"
)

var (
	stunBinding = []byte{
		0x00, 0x01, 0x00, 0x58, 0x21, 0x12, 0xa4, 0x42,
		0x57, 0x46, 0x77, 0x7a, 0x73, 0x79, 0x35, 0x6e,
		0x63, 0x41, 0x65, 0x79, 0x00, 0x06, 0x00, 0x15,
		0x32, 0x32, 0x69, 0x77, 0x38, 0x68, 0x30, 0x33,
		0x79, 0x6f, 0x7a, 0x74, 0x38, 0x6a, 0x65, 0x66,
		0x3a, 0x55, 0x57, 0x34, 0x4d, 0x00, 0x00, 0x00,
		0xc0, 0x57, 0x00, 0x04, 0x00, 0x01, 0x00, 0x0a,
		0x80, 0x2a, 0x00, 0x08, 0x03, 0xdc, 0x16, 0xf2,
		0x9b, 0x81, 0x23, 0x9a, 0x00, 0x24, 0x00, 0x04,
		0x6e, 0x7f, 0x1e, 0xff, 0x00, 0x08, 0x00, 0x14,
		0x77, 0xbf, 0x62, 0xaf, 0xd9, 0xe5, 0x97, 0x05,
		0xc2, 0x92, 0x08, 0x18, 0x49, 0x17, 0xd2, 0x3f,
		0x86, 0xd6, 0x70, 0x22, 0x80, 0x28, 0x00, 0x04,
		0x44, 0x65, 0xed, 0x93,
	}
	stunBindingResponse = []byte{ /* packet 2999 */
		0x01, 0x01, 0x00, 0x2c, 0x21, 0x12, 0xa4, 0x42,
		0x57, 0x46, 0x77, 0x7a, 0x73, 0x79, 0x35, 0x6e,
		0x63, 0x41, 0x65, 0x79, 0x00, 0x20, 0x00, 0x08,
		0x00, 0x01, 0xe6, 0x66, 0xe1, 0xba, 0xa4, 0x9e,
		0x00, 0x08, 0x00, 0x14, 0xa8, 0x27, 0x71, 0x5b,
		0x55, 0xfc, 0x7b, 0x8b, 0x6d, 0x9d, 0x6b, 0x2e,
		0x6c, 0x64, 0x1b, 0x33, 0x64, 0xcc, 0x67, 0x7f,
		0x80, 0x28, 0x00, 0x04, 0x3f, 0x4e, 0x69, 0x8b,
	}
	stunBindingUse = []byte{ /* packet 3004 */
		0x00, 0x01, 0x00, 0x5c, 0x21, 0x12, 0xa4, 0x42,
		0x5a, 0x6d, 0x4d, 0x66, 0x36, 0x66, 0x33, 0x4e,
		0x36, 0x6f, 0x31, 0x51, 0x00, 0x06, 0x00, 0x15,
		0x32, 0x32, 0x69, 0x77, 0x38, 0x68, 0x30, 0x33,
		0x79, 0x6f, 0x7a, 0x74, 0x38, 0x6a, 0x65, 0x66,
		0x3a, 0x55, 0x57, 0x34, 0x4d, 0x00, 0x00, 0x00,
		0xc0, 0x57, 0x00, 0x04, 0x00, 0x01, 0x00, 0x0a,
		0x80, 0x2a, 0x00, 0x08, 0x03, 0xdc, 0x16, 0xf2,
		0x9b, 0x81, 0x23, 0x9a, 0x00, 0x25, 0x00, 0x00,
		0x00, 0x24, 0x00, 0x04, 0x6e, 0x7f, 0x1e, 0xff,
		0x00, 0x08, 0x00, 0x14, 0x1e, 0x9e, 0x31, 0xef,
		0x7c, 0x20, 0x18, 0xe7, 0x63, 0x25, 0xcb, 0x69,
		0xf4, 0xa2, 0x45, 0x07, 0x12, 0xd5, 0xbe, 0xdf,
		0x80, 0x28, 0x00, 0x04, 0xf3, 0xa5, 0xc0, 0x0d,
	}

	stunUsername = "22iw8h03yozt8jef"
	stunPwd      = "hkr1axcysncz3nbjjzoc7s07of3malp9"
)

type testHelper struct {
	name        string
	description string
	method      func(t *testing.T)
}

func assert(t *testing.T, actual, expected any) {
	if !reflect.DeepEqual(actual, expected) {
		t.Logf("expected: %v, but got: %v", expected, actual)
		t.FailNow()
	}
}

func stunMessage(b []byte) *stun.Message {
	m := stun.New()
	_ = stun.Decode(b, m)
	return m
}
